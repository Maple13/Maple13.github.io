[{"title":"IE 条件语句","date":"2016-07-04T07:39:20.000Z","path":"2016/07/04/2016-07-04/","text":"用途 IE 条件语句包含在HTML注释语句中，只会被 IE 浏览器识别并执行，其他浏览器视其为HTML注释语句，于是全部被忽略，灵活使用IE 条件语句可以开发出兼容不同版本的IE浏览器的样式。 解析如果留意一下有些网站的源代码，有时会发现一些这样的代码：1234567&lt;!--[if IE5]&gt;&lt;style type=\"text/css\"&gt; /*将IE5*的CSS盒模型宽高计算修正放在这个条件注释中*/ #Test1 &#123; width: 180px; &#125; #Test2 &#123; width: 190px; &#125;&lt;/style&gt;&lt;![endif]--&gt; 或者1234567&lt;link href=\"css/index.css\" type=\"text/css\" /&gt;&lt;!--[if IE7]&gt;&lt;link href=\"css/ie7.css\" type=\"text/css\" /&gt;&lt;![endif]--&gt;&lt;!--[if IE6]&gt;&lt;link href=\"css/ie7.css\" type=\"text/css\" /&gt;&lt;![endif]--&gt; &lt;!– 和 –&gt;标识符配对使用表示HTML注释语句。但是IE会把这些特殊的注释语句当做一个简单的逻辑语句进行解析。 # 上面的第一段注释，表示如果当前浏览器是IE浏览器，则解析&lt;!–[if IE]&gt; 和 &lt;![endif]–&gt;标识符之间的样式表。而其他浏览器视而不见，当做注释语句全部忽略。因此可以在此放置一些能够兼容IE浏览器的样式代码。 在上面的第二段代码中，分别使用了不同的条件语句来设置不同版本的IE浏览器中链接不同的CSS文件，这样，不同版本的IE浏览器就可以导入不同的样式表，以实现兼容性。 IE条件语句的基本用法IE 条件语句一般放在HTML注释语句中，这样可以避免其他浏览器因为无法解析这些条件语句时可能出现的尴尬。其基本语法如下：123&lt;!--[if IE]&gt; IE 下可执行语句&lt;![endif]--&gt; 条件语句放在中括号内，然后嵌入到HTML注释中。注意，起始条件标记中省略了HTML注释语句的后半部分标记（– –&gt;），而结束标记中省略了HTML注释语句的前半部分标记（!– –），仅是一个半封闭的形式，这样对于其他浏览器来说，前后两个半封闭的HTML注释标记就形成了一个完整的注释标记，从而避免了由于其他浏览器无法解析的尴尬。 IE浏览器在解析HTML源码时，如果遇到类似&lt;!–[if IE]&gt;或&lt;![endif]–&gt;标记时，会立即解析其中包含的源代码。 在IE条件中可以放置一些简单的条件语句，或者设置成只能够在特定版本的浏览器中生效的源代码。 # 除了使用这些指定某种版本浏览器的条件语句之外，还可以结合 lte、lt、get、gt、！关键字来定义IE浏览器的版本范围，这些关键字的说明如下：``` ruby lte: 小于或等于某个版本的IE浏览器。 lt: 小于某个版本的IE浏览器。 gte： 大于或等于某个版本的IE浏览器。 gt： 大于某个版本的IE浏览器。 ！：不等于某个版本的IE浏览器。","tags":[{"name":"浏览器","slug":"浏览器","permalink":"maple13.github.io/tags/浏览器/"},{"name":"CSS","slug":"CSS","permalink":"maple13.github.io/tags/CSS/"}]},{"title":"Sublime Text 3 下编辑Markdown文件后在浏览器下自动刷新预览","date":"2016-06-22T08:08:20.000Z","path":"2016/06/22/2016-06-22/","text":"来源 近日在Sublime中编辑Markdown文件时想要实时预览一下,于是在网上寻找到了一种比较简单有效的方法，此方法来源于网上的Volcano大神，他的博客，他的GitHub地址。 安装Sublime Text 3 请前往Sublime Text官网下载Sublime软件并安装 下载插件 下载用于实时预览Markdown文件的Chrome插件。 使用Git方式下载 1$ git clone git://github.com/volca/markdown-preview.git Zip包下载 Chrome 网上应用店下载扩展 使用方法 找到上一步第一、二个方法下载的 markdown-preview 文件夹 开启chrome扩展的开发者模式，具体位置在 设置 -&gt; 扩展程序 里 加载已解压的扩展程序 将 允许访问文件网址 勾选上 然后你就可以尝试用chrome浏览器打开markdown文件预览了，采用趁手的编辑器去修改它。它会在浏览器自动刷新！","tags":[{"name":"Sublime","slug":"Sublime","permalink":"maple13.github.io/tags/Sublime/"}]},{"title":"Hello World！","date":"2015-09-17T08:22:52.000Z","path":"2015/09/17/Hello-world/","text":"Welcome to Hexo! 以下是Hexo的一些常用命令，如果需要详细了解,可以前往 documentation 查询详细文档. 如果你在使用Hexo时出现问题，你可以在troubleshooting搜索答案,或者可以前往Hexo的GitHub上提出问题. 快速开始创建一个新的文章1$ hexo new \"My New Post\" More info: Writing 运行服务1$ hexo server More info: Server 生成静态文件1$ hexo generate More info: Generating 部署到远程站点1$ hexo deploy More info: Deployment","tags":[{"name":"随笔","slug":"随笔","permalink":"maple13.github.io/tags/随笔/"}]}]